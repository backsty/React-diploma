import { useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useAtom } from '@reatom/npm-react';
import { Loader, ErrorMessage } from '@/shared/ui';
import { ROUTES } from '@/shared/config';
import { 
  ProductDetails, 
  ProductDetailsSkeleton,
  getProduct,
  setProductLoadingAction,
  setProductDataAction,
  setProductErrorAction,
  clearProductAction,
  currentProductAtom
} from '@/entities/product';
import { ctx } from '@/shared/store';

export const ProductPage = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const [productState] = useAtom(currentProductAtom);

  useEffect(() => {
    const loadProduct = async () => {
      // eslint-disable-next-line no-console
      console.log('üìç ProductPage: –ø–æ–ª—É—á–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä id =', id);
      
      if (!id) {
        console.error('‚ùå ProductPage: –ø–∞—Ä–∞–º–µ—Ç—Ä id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        navigate(ROUTES.NOT_FOUND);
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ id —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
      if (!/^\d+$/.test(id)) {
        console.error('‚ùå ProductPage: –ø–∞—Ä–∞–º–µ—Ç—Ä id –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º:', id);
        navigate(ROUTES.NOT_FOUND);
        return;
      }

      const productId = parseInt(id, 10);
      if (isNaN(productId) || productId <= 0) {
        console.error('‚ùå ProductPage: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π productId:', productId);
        navigate(ROUTES.NOT_FOUND);
        return;
      }

      // eslint-disable-next-line no-console
      console.log('‚úÖ ProductPage: –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä —Å ID:', productId);

      try {
        // –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        setProductLoadingAction(ctx, true);
        clearProductAction(ctx);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä
        const product = await getProduct(productId);
        // eslint-disable-next-line no-console
        console.log('‚úÖ ProductPage: —Ç–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω:', product);
        setProductDataAction(ctx, product);

      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞';
        console.error('‚ùå ProductPage: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞:', error);
        setProductErrorAction(ctx, errorMessage);
        
        // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω (404), –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ 404
        if (errorMessage.includes('404') || errorMessage.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω')) {
          navigate(ROUTES.NOT_FOUND);
        }
      }
    };

    loadProduct();

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      clearProductAction(ctx);
    };
  }, [id, navigate]);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (productState.isLoading && !productState.data) {
    return (
      <main className="container my-5">
        <ProductDetailsSkeleton />
      </main>
    );
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (productState.error && !productState.data) {
    return (
      <main className="container my-5">
        <ErrorMessage 
          message={productState.error}
          onRetry={() => window.location.reload()}
        />
      </main>
    );
  }

  // –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
  if (!productState.data) {
    return (
      <main className="container my-5">
        <div className="text-center">
          <h2>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
          <p>–í–æ–∑–º–æ–∂–Ω–æ, —Ç–æ–≤–∞—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω</p>
          <button 
            className="btn btn-primary"
            onClick={() => navigate(ROUTES.CATALOG)}
          >
            –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
          </button>
        </div>
      </main>
    );
  }

  return (
    <main className="container my-5">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥ */}
      <nav aria-label="breadcrumb" className="mb-4">
        <ol className="breadcrumb">
          <li className="breadcrumb-item">
            <button 
              className="btn btn-link p-0"
              onClick={() => navigate(ROUTES.HOME)}
            >
              –ì–ª–∞–≤–Ω–∞—è
            </button>
          </li>
          <li className="breadcrumb-item">
            <button 
              className="btn btn-link p-0"
              onClick={() => navigate(ROUTES.CATALOG)}
            >
              –ö–∞—Ç–∞–ª–æ–≥
            </button>
          </li>
          <li className="breadcrumb-item active" aria-current="page">
            {productState.data.title}
          </li>
        </ol>
      </nav>

      {/* –î–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–∞ */}
      <ProductDetails 
        product={productState.data}
        onAddToCart={() => {
          // eslint-disable-next-line no-console
          console.log('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É:', productState.data?.title);
        }}
      />

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ */}
      {productState.isLoading && productState.data && (
        <div className="position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-dark bg-opacity-25" style={{ zIndex: 9999 }}>
          <div className="bg-white rounded p-4">
            <Loader text="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞..." />
          </div>
        </div>
      )}
    </main>
  );
};