import { atom } from '@reatom/core';
import { withLocalStorage } from '@reatom/persist-web-storage';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
interface PersistConfig {
  key: string;
  serialize?: (value: unknown) => string;
  deserialize?: (value: string) => unknown;
}

export const createPersistedAtom = <T>(
  initialValue: T,
  storageKey: string,
  atomName: string
) => {
  const baseAtom = atom(initialValue, atomName);

  return baseAtom.pipe(
    withLocalStorage(storageKey)
  );
};

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö–µ–ª–ø–µ—Ä –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
export const createPersistedCartAtom = <T>(
  initialValue: T,
  storageKey: string
) => {
  const baseAtom = atom(initialValue, 'persistedCart');
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –±–∞–∑–æ–≤—É—é –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
  const persistedAtom = baseAtom.pipe(
    withLocalStorage(storageKey)
  );
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∞—Ç–æ–º
  return atom((ctx) => {
    const value = ctx.spy(persistedAtom);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
    try {
      if (Array.isArray(value)) {
        return value as T;
      }
      return initialValue;
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã:', error);
      return initialValue;
    }
  }, 'validatedCart');
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
export const initPersistence = (): void => {
  // eslint-disable-next-line no-console
  console.log('üîÑ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å localStorage
  if (typeof window !== 'undefined' && window.localStorage) {
    // eslint-disable-next-line no-console
    console.log('‚úÖ localStorage –¥–æ—Å—Ç—É–ø–µ–Ω');
  } else {
    console.warn('‚ö†Ô∏è localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }
};

// –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export const clearPersistedData = (key: string): void => {
  try {
    if (typeof window !== 'undefined' && window.localStorage) {
      window.localStorage.removeItem(key);
      // eslint-disable-next-line no-console
      console.log(`üßπ –û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–ª—é—á–∞: ${key}`);
    }
  } catch (error) {
    console.warn(`–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–ª—é—á–∞ ${key}:`, error);
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export const getPersistedData = <T>(key: string, defaultValue: T): T => {
  try {
    if (typeof window === 'undefined' || !window.localStorage) {
      return defaultValue;
    }
    
    const item = window.localStorage.getItem(key);
    if (item === null) {
      return defaultValue;
    }
    
    return JSON.parse(item) as T;
  } catch (error) {
    console.warn(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–ª—é—á–∞ ${key}:`, error);
    return defaultValue;
  }
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export const setPersistedData = <T>(key: string, value: T): void => {
  try {
    if (typeof window === 'undefined' || !window.localStorage) {
      return;
    }
    
    window.localStorage.setItem(key, JSON.stringify(value));
    // eslint-disable-next-line no-console
    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–ª—é—á–∞: ${key}`);
  } catch (error) {
    console.warn(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–ª—é—á–∞ ${key}:`, error);
  }
};

// –•–µ–ª–ø–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
export const getStorageSize = (): number => {
  try {
    if (typeof window === 'undefined' || !window.localStorage) {
      return 0;
    }
    
    let total = 0;
    for (const key in window.localStorage) {
      if (Object.prototype.hasOwnProperty.call(window.localStorage, key)) {
        const value = window.localStorage.getItem(key);
        if (value) {
          total += key.length + value.length;
        }
      }
    }
    
    return total;
  } catch (error) {
    console.warn('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ localStorage:', error);
    return 0;
  }
};

// –•–µ–ª–ø–µ—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ–≥–æ localStorage (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
export const clearAllPersistedData = (): void => {
  try {
    if (typeof window !== 'undefined' && window.localStorage) {
      window.localStorage.clear();
      // eslint-disable-next-line no-console
      console.log('üßπ –í–µ—Å—å localStorage –æ—á–∏—â–µ–Ω');
    }
  } catch (error) {
    console.warn('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error);
  }
};

// –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ localStorage
export const isLocalStorageAvailable = (): boolean => {
  try {
    if (typeof window === 'undefined') {
      return false;
    }
    
    const test = '__localStorage_test__';
    window.localStorage.setItem(test, test);
    window.localStorage.removeItem(test);
    return true;
  } catch {
    return false;
  }
};

export type { PersistConfig };